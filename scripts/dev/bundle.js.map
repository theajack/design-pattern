{
  "version": 3,
  "sources": ["../../src/type.d.ts", "../../src/creational/factory-pattern.ts", "../../src/creational/abstract-factory-pattern.ts", "../../src/creational/singleton-patten.ts"],
  "sourcesContent": ["/*\n * @Author: tackchen\n * @Date: 2022-08-03 21:45:10\n * @Description: Coding something\n */\nexport interface IJson<T = any> {\n  [prop: string]: T;\n}\n\nexport interface IShape {\n  draw(): void;\n}\n\nexport class Shape implements IShape {\n  draw(): void;\n}\n\nexport interface IColor {\n  fill(): void;\n}", "/*\n * @Author: tackchen\n * @Date: 2022-08-03 22:07:51\n * @Description: \u5DE5\u5382\u6A21\u5F0F\n *\n\u5DE5\u5382\u6A21\u5F0F\uFF08Factory Pattern\uFF09\u662F Java \u4E2D\u6700\u5E38\u7528\u7684\u8BBE\u8BA1\u6A21\u5F0F\u4E4B\u4E00\u3002\u8FD9\u79CD\u7C7B\u578B\u7684\u8BBE\u8BA1\u6A21\u5F0F\u5C5E\u4E8E\u521B\u5EFA\u578B\u6A21\u5F0F\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u521B\u5EFA\u5BF9\u8C61\u7684\u6700\u4F73\u65B9\u5F0F\u3002\n\u5728\u5DE5\u5382\u6A21\u5F0F\u4E2D\uFF0C\u6211\u4EEC\u5728\u521B\u5EFA\u5BF9\u8C61\u65F6\u4E0D\u4F1A\u5BF9\u5BA2\u6237\u7AEF\u66B4\u9732\u521B\u5EFA\u903B\u8F91\uFF0C\u5E76\u4E14\u662F\u901A\u8FC7\u4F7F\u7528\u4E00\u4E2A\u5171\u540C\u7684\u63A5\u53E3\u6765\u6307\u5411\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u3002\n */\nimport {Shape, IShape} from '../type.d';\n\nexport class Rectangle implements IShape {\n  draw () {\n    console.log('Rectangle draw');\n  }\n}\n\nexport class Square implements IShape {\n  draw () {\n    console.log('Square draw');\n  }\n}\n\nexport function shapeFactory (type: 'rectangle' | 'square'): IShape {\n  if (type === 'rectangle') {\n    return new Rectangle();\n  } else if (type === 'square') {\n    return new Square();\n  }\n  return new Shape();\n}\n\nshapeFactory('rectangle').draw();\nshapeFactory('square').draw();", "\n/*\n * @Author: tackchen\n * @Date: 2022-08-03 22:17:35\n * @Description: Coding something\n *\n * \u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\uFF08Abstract Factory Pattern\uFF09\u662F\u56F4\u7ED5\u4E00\u4E2A\u8D85\u7EA7\u5DE5\u5382\u521B\u5EFA\u5176\u4ED6\u5DE5\u5382\u3002\u8BE5\u8D85\u7EA7\u5DE5\u5382\u53C8\u79F0\u4E3A\u5176\u4ED6\u5DE5\u5382\u7684\u5DE5\u5382\u3002\u8FD9\u79CD\u7C7B\u578B\u7684\u8BBE\u8BA1\u6A21\u5F0F\u5C5E\u4E8E\u521B\u5EFA\u578B\u6A21\u5F0F\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u521B\u5EFA\u5BF9\u8C61\u7684\u6700\u4F73\u65B9\u5F0F\u3002\n\u5728\u62BD\u8C61\u5DE5\u5382\u6A21\u5F0F\u4E2D\uFF0C\u63A5\u53E3\u662F\u8D1F\u8D23\u521B\u5EFA\u4E00\u4E2A\u76F8\u5173\u5BF9\u8C61\u7684\u5DE5\u5382\uFF0C\u4E0D\u9700\u8981\u663E\u5F0F\u6307\u5B9A\u5B83\u4EEC\u7684\u7C7B\u3002\u6BCF\u4E2A\u751F\u6210\u7684\u5DE5\u5382\u90FD\u80FD\u6309\u7167\u5DE5\u5382\u6A21\u5F0F\u63D0\u4F9B\u5BF9\u8C61\u3002\n */\n\nimport {IColor, IShape} from '../type.d';\nimport {shapeFactory} from './factory-pattern';\n\nexport class Circle implements IShape {\n  public draw () {\n    console.log('Circle draw');\n  }\n}\n\nexport class Red implements IColor {\n  fill () {\n    console.log('Red fill');\n  }\n}\n\nexport class Green implements IColor {\n  fill () {\n    console.log('Green fill');\n  }\n}\n\nfunction colorFactory (type: 'red' | 'green') {\n  if (type === 'red') {\n    return new Red();\n  } else if (type === 'green') {\n    return new Green();\n  }\n  throw new Error('Invalid color type: ' + type);\n}\n\n\nfunction getFactory(type: 'shape'): (type: 'rectangle' | 'square')=>IShape;\nfunction getFactory(type: 'color'): (type: 'red' | 'green')=>IColor;\nfunction getFactory (type: 'shape' | 'color') {\n  if (type === 'shape') {\n    return shapeFactory;\n  } else if (type === 'color') {\n    return colorFactory;\n  } else {\n    throw new Error('Invalid type: ' + type);\n  }\n}\n\ngetFactory('shape')('rectangle').draw();\n\ngetFactory('color')('red').fill();", "/*\n * @Author: tackchen\n * @Date: 2022-08-03 22:38:21\n * @Description: Coding something\n\u5355\u4F8B\u6A21\u5F0F\uFF08Singleton Pattern\uFF09\u662F Java \u4E2D\u6700\u7B80\u5355\u7684\u8BBE\u8BA1\u6A21\u5F0F\u4E4B\u4E00\u3002\u8FD9\u79CD\u7C7B\u578B\u7684\u8BBE\u8BA1\u6A21\u5F0F\u5C5E\u4E8E\u521B\u5EFA\u578B\u6A21\u5F0F\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u521B\u5EFA\u5BF9\u8C61\u7684\u6700\u4F73\u65B9\u5F0F\u3002\n\n\u8FD9\u79CD\u6A21\u5F0F\u6D89\u53CA\u5230\u4E00\u4E2A\u5355\u4E00\u7684\u7C7B\uFF0C\u8BE5\u7C7B\u8D1F\u8D23\u521B\u5EFA\u81EA\u5DF1\u7684\u5BF9\u8C61\uFF0C\u540C\u65F6\u786E\u4FDD\u53EA\u6709\u5355\u4E2A\u5BF9\u8C61\u88AB\u521B\u5EFA\u3002\u8FD9\u4E2A\u7C7B\u63D0\u4F9B\u4E86\u4E00\u79CD\u8BBF\u95EE\u5176\u552F\u4E00\u7684\u5BF9\u8C61\u7684\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\uFF0C\u4E0D\u9700\u8981\u5B9E\u4F8B\u5316\u8BE5\u7C7B\u7684\u5BF9\u8C61\u3002\n */\n\n// 1. \u61D2\u6C49\u5F0F \u4E0D\u652F\u6301\u591A\u7EBF\u7A0B\n\nexport class SingleObject {\n  private static instance: SingleObject;\n  static getInstance (): SingleObject {\n    return new SingleObject();\n  }\n  constructor () {\n    if (SingleObject.instance) {\n      return SingleObject.instance;\n    }\n    SingleObject.instance = this;\n  }\n}\n\nconsole.log('Singleton Pattern');\nconsole.log(new SingleObject() === new SingleObject());\nconsole.log(new SingleObject() === SingleObject.getInstance());\n\n// 2. \u61D2\u6C49\u5F0F \u7EBF\u7A0B\u5B89\u5168\n// \u867D\u7136js\u6CA1\u6709\u591A\u7EBF\u7A0B \u8FD9\u91CC\u4F7F\u7528\u5F02\u6B65\u6A21\u62DF\n\nexport class SingleObject2 {\n  private static isCreateing = false;\n  private static listeners: Function[] = [];\n  private static instance: SingleObject2;\n  propA: string;\n  static async getInstance (): Promise<SingleObject2> {\n    console.log(SingleObject2.instance, SingleObject2.isCreateing);\n    if (!SingleObject2.instance) {\n      return new Promise(resolve => {\n        if (!SingleObject2.isCreateing) {\n          SingleObject2.isCreateing = true;\n          new SingleObject2((instance: SingleObject2) => {\n            SingleObject2.instance = instance;\n            SingleObject2.isCreateing = false;\n            SingleObject2.listeners.forEach(fn => fn(instance));\n            resolve(instance);\n          });\n        } else {\n          console.warn('SingleObject2 asynchronously created');\n          SingleObject2.listeners.push(resolve);\n        }\n      });\n    }\n    return SingleObject2.instance;\n  }\n  private constructor (onCreated: Function) {\n    // do something asynchronously\n    setTimeout(() => { // \u6A21\u62DF\u5F02\u6B65\u4EFB\u52A1\n      this.propA = 'a';\n      onCreated(this);\n    }, 100);\n  }\n}\n\n(async () => {\n  console.log();\n  let prevValue: SingleObject2;\n  const handler = (o: SingleObject2) => {\n    if (!prevValue) {\n      prevValue = o;\n    } else {\n      console.log('SingleObject2 then equal: ', prevValue === o);\n    }\n  };\n  console.log(SingleObject2.getInstance().then(handler));\n  console.log(SingleObject2.getInstance().then(handler));\n  console.log('SingleObject2 await equal: ', await SingleObject2.getInstance() === await SingleObject2.getInstance());\n})();\n\n// 3. \u997F\u6C49\u5F0F \u5BB9\u6613\u4EA7\u751F\u5783\u573E\u5BF9\u8C61\n\nexport class SingleObject3 {\n  private static instance: SingleObject3 = new SingleObject3();\n  static getInstance (): SingleObject3 {\n    return SingleObject3.instance;\n  }\n  constructor () {\n    return SingleObject3.getInstance();\n  }\n}\n\nconsole.log();\nconsole.log('Singleton Pattern3');\nconsole.log(new SingleObject3() === new SingleObject3());\nconsole.log(new SingleObject3() === SingleObject3.getInstance());"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAaO,IAAM,QAAN,MAA8B;AAErC;;;ACLO,IAAM,YAAN,MAAkC;AAAA,EACvC,OAAQ;AACN,YAAQ,IAAI,gBAAgB;AAAA,EAC9B;AACF;AAEO,IAAM,SAAN,MAA+B;AAAA,EACpC,OAAQ;AACN,YAAQ,IAAI,aAAa;AAAA,EAC3B;AACF;AAEO,sBAAuB,MAAsC;AAClE,MAAI,SAAS,aAAa;AACxB,WAAO,IAAI,UAAU;AAAA,EACvB,WAAW,SAAS,UAAU;AAC5B,WAAO,IAAI,OAAO;AAAA,EACpB;AACA,SAAO,IAAI,MAAM;AACnB;AAEA,aAAa,WAAW,EAAE,KAAK;AAC/B,aAAa,QAAQ,EAAE,KAAK;;;ACbrB,IAAM,MAAN,MAA4B;AAAA,EACjC,OAAQ;AACN,YAAQ,IAAI,UAAU;AAAA,EACxB;AACF;AAEO,IAAM,QAAN,MAA8B;AAAA,EACnC,OAAQ;AACN,YAAQ,IAAI,YAAY;AAAA,EAC1B;AACF;AAEA,sBAAuB,MAAuB;AAC5C,MAAI,SAAS,OAAO;AAClB,WAAO,IAAI,IAAI;AAAA,EACjB,WAAW,SAAS,SAAS;AAC3B,WAAO,IAAI,MAAM;AAAA,EACnB;AACA,QAAM,IAAI,MAAM,yBAAyB,IAAI;AAC/C;AAKA,oBAAqB,MAAyB;AAC5C,MAAI,SAAS,SAAS;AACpB,WAAO;AAAA,EACT,WAAW,SAAS,SAAS;AAC3B,WAAO;AAAA,EACT,OAAO;AACL,UAAM,IAAI,MAAM,mBAAmB,IAAI;AAAA,EACzC;AACF;AAEA,WAAW,OAAO,EAAE,WAAW,EAAE,KAAK;AAEtC,WAAW,OAAO,EAAE,KAAK,EAAE,KAAK;;;AC5CzB,IAAM,eAAN,MAAmB;AAAA,EAExB,OAAO,cAA6B;AAClC,WAAO,IAAI,aAAa;AAAA,EAC1B;AAAA,EACA,cAAe;AACb,QAAI,aAAa,UAAU;AACzB,aAAO,aAAa;AAAA,IACtB;AACA,iBAAa,WAAW;AAAA,EAC1B;AACF;AAEA,QAAQ,IAAI,mBAAmB;AAC/B,QAAQ,IAAI,IAAI,aAAa,MAAM,IAAI,aAAa,CAAC;AACrD,QAAQ,IAAI,IAAI,aAAa,MAAM,aAAa,YAAY,CAAC;AAKtD,IAAM,iBAAN,MAAoB;AAAA,EAKzB,OAAa,cAAuC;AAAA;AAClD,cAAQ,IAAI,eAAc,UAAU,eAAc,WAAW;AAC7D,UAAI,CAAC,eAAc,UAAU;AAC3B,eAAO,IAAI,QAAQ,aAAW;AAC5B,cAAI,CAAC,eAAc,aAAa;AAC9B,2BAAc,cAAc;AAC5B,gBAAI,eAAc,CAAC,aAA4B;AAC7C,6BAAc,WAAW;AACzB,6BAAc,cAAc;AAC5B,6BAAc,UAAU,QAAQ,QAAM,GAAG,QAAQ,CAAC;AAClD,sBAAQ,QAAQ;AAAA,YAClB,CAAC;AAAA,UACH,OAAO;AACL,oBAAQ,KAAK,sCAAsC;AACnD,2BAAc,UAAU,KAAK,OAAO;AAAA,UACtC;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO,eAAc;AAAA,IACvB;AAAA;AAAA,EACA,AAAQ,YAAa,WAAqB;AAExC,eAAW,MAAM;AACf,WAAK,QAAQ;AACb,gBAAU,IAAI;AAAA,IAChB,GAAG,GAAG;AAAA,EACR;AACF;AAhCO,IAAM,gBAAN;AACL,AADW,cACI,cAAc;AAC7B,AAFW,cAEI,YAAwB,CAAC;AAgC1C,AAAC,OAAY;AACX,UAAQ,IAAI;AACZ,MAAI;AACJ,QAAM,UAAU,CAAC,MAAqB;AACpC,QAAI,CAAC,WAAW;AACd,kBAAY;AAAA,IACd,OAAO;AACL,cAAQ,IAAI,8BAA8B,cAAc,CAAC;AAAA,IAC3D;AAAA,EACF;AACA,UAAQ,IAAI,cAAc,YAAY,EAAE,KAAK,OAAO,CAAC;AACrD,UAAQ,IAAI,cAAc,YAAY,EAAE,KAAK,OAAO,CAAC;AACrD,UAAQ,IAAI,+BAA+B,OAAM,cAAc,YAAY,OAAM,OAAM,cAAc,YAAY,EAAC;AACpH,IAAG;AAII,IAAM,iBAAN,MAAoB;AAAA,EAEzB,OAAO,cAA8B;AACnC,WAAO,eAAc;AAAA,EACvB;AAAA,EACA,cAAe;AACb,WAAO,eAAc,YAAY;AAAA,EACnC;AACF;AARO,IAAM,gBAAN;AACL,AADW,cACI,WAA0B,IAAI,eAAc;AAS7D,QAAQ,IAAI;AACZ,QAAQ,IAAI,oBAAoB;AAChC,QAAQ,IAAI,IAAI,cAAc,MAAM,IAAI,cAAc,CAAC;AACvD,QAAQ,IAAI,IAAI,cAAc,MAAM,cAAc,YAAY,CAAC;",
  "names": []
}
